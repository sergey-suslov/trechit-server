// Code generated by protoc-gen-go. DO NOT EDIT.
// source: timer/timerapi.proto

package timer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TimeSpan struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               int32                `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimeSpan) Reset()         { *m = TimeSpan{} }
func (m *TimeSpan) String() string { return proto.CompactTextString(m) }
func (*TimeSpan) ProtoMessage()    {}
func (*TimeSpan) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa45ebfb9a7a06d4, []int{0}
}

func (m *TimeSpan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeSpan.Unmarshal(m, b)
}
func (m *TimeSpan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeSpan.Marshal(b, m, deterministic)
}
func (m *TimeSpan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeSpan.Merge(m, src)
}
func (m *TimeSpan) XXX_Size() int {
	return xxx_messageInfo_TimeSpan.Size(m)
}
func (m *TimeSpan) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeSpan.DiscardUnknown(m)
}

var xxx_messageInfo_TimeSpan proto.InternalMessageInfo

func (m *TimeSpan) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TimeSpan) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TimeSpan) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TimeSpan) GetStopTime() *timestamp.Timestamp {
	if m != nil {
		return m.StopTime
	}
	return nil
}

func (m *TimeSpan) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type StartTimerRequest struct {
	UserId               int32                `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StartTimerRequest) Reset()         { *m = StartTimerRequest{} }
func (m *StartTimerRequest) String() string { return proto.CompactTextString(m) }
func (*StartTimerRequest) ProtoMessage()    {}
func (*StartTimerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa45ebfb9a7a06d4, []int{1}
}

func (m *StartTimerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTimerRequest.Unmarshal(m, b)
}
func (m *StartTimerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTimerRequest.Marshal(b, m, deterministic)
}
func (m *StartTimerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTimerRequest.Merge(m, src)
}
func (m *StartTimerRequest) XXX_Size() int {
	return xxx_messageInfo_StartTimerRequest.Size(m)
}
func (m *StartTimerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTimerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartTimerRequest proto.InternalMessageInfo

func (m *StartTimerRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StartTimerRequest) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

type StartTimerResponse struct {
	TimeSpan             *TimeSpan `protobuf:"bytes,1,opt,name=timeSpan,proto3" json:"timeSpan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StartTimerResponse) Reset()         { *m = StartTimerResponse{} }
func (m *StartTimerResponse) String() string { return proto.CompactTextString(m) }
func (*StartTimerResponse) ProtoMessage()    {}
func (*StartTimerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa45ebfb9a7a06d4, []int{2}
}

func (m *StartTimerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTimerResponse.Unmarshal(m, b)
}
func (m *StartTimerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTimerResponse.Marshal(b, m, deterministic)
}
func (m *StartTimerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTimerResponse.Merge(m, src)
}
func (m *StartTimerResponse) XXX_Size() int {
	return xxx_messageInfo_StartTimerResponse.Size(m)
}
func (m *StartTimerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTimerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartTimerResponse proto.InternalMessageInfo

func (m *StartTimerResponse) GetTimeSpan() *TimeSpan {
	if m != nil {
		return m.TimeSpan
	}
	return nil
}

type StopTimerRequest struct {
	UserId               int32                `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	StopTime             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	TimeSpanId           int32                `protobuf:"varint,3,opt,name=timeSpanId,proto3" json:"timeSpanId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StopTimerRequest) Reset()         { *m = StopTimerRequest{} }
func (m *StopTimerRequest) String() string { return proto.CompactTextString(m) }
func (*StopTimerRequest) ProtoMessage()    {}
func (*StopTimerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa45ebfb9a7a06d4, []int{3}
}

func (m *StopTimerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopTimerRequest.Unmarshal(m, b)
}
func (m *StopTimerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopTimerRequest.Marshal(b, m, deterministic)
}
func (m *StopTimerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopTimerRequest.Merge(m, src)
}
func (m *StopTimerRequest) XXX_Size() int {
	return xxx_messageInfo_StopTimerRequest.Size(m)
}
func (m *StopTimerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopTimerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopTimerRequest proto.InternalMessageInfo

func (m *StopTimerRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StopTimerRequest) GetStopTime() *timestamp.Timestamp {
	if m != nil {
		return m.StopTime
	}
	return nil
}

func (m *StopTimerRequest) GetTimeSpanId() int32 {
	if m != nil {
		return m.TimeSpanId
	}
	return 0
}

type StopTimerResponse struct {
	TimeSpanId           int32    `protobuf:"varint,3,opt,name=timeSpanId,proto3" json:"timeSpanId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopTimerResponse) Reset()         { *m = StopTimerResponse{} }
func (m *StopTimerResponse) String() string { return proto.CompactTextString(m) }
func (*StopTimerResponse) ProtoMessage()    {}
func (*StopTimerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa45ebfb9a7a06d4, []int{4}
}

func (m *StopTimerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopTimerResponse.Unmarshal(m, b)
}
func (m *StopTimerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopTimerResponse.Marshal(b, m, deterministic)
}
func (m *StopTimerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopTimerResponse.Merge(m, src)
}
func (m *StopTimerResponse) XXX_Size() int {
	return xxx_messageInfo_StopTimerResponse.Size(m)
}
func (m *StopTimerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopTimerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopTimerResponse proto.InternalMessageInfo

func (m *StopTimerResponse) GetTimeSpanId() int32 {
	if m != nil {
		return m.TimeSpanId
	}
	return 0
}

func init() {
	proto.RegisterType((*TimeSpan)(nil), "timer.TimeSpan")
	proto.RegisterType((*StartTimerRequest)(nil), "timer.StartTimerRequest")
	proto.RegisterType((*StartTimerResponse)(nil), "timer.StartTimerResponse")
	proto.RegisterType((*StopTimerRequest)(nil), "timer.StopTimerRequest")
	proto.RegisterType((*StopTimerResponse)(nil), "timer.StopTimerResponse")
}

func init() { proto.RegisterFile("timer/timerapi.proto", fileDescriptor_fa45ebfb9a7a06d4) }

var fileDescriptor_fa45ebfb9a7a06d4 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xdf, 0x4a, 0xf3, 0x30,
	0x18, 0xc6, 0xbf, 0xf4, 0xb3, 0xa3, 0x7b, 0x07, 0xfe, 0x09, 0xa2, 0xb1, 0x07, 0x3a, 0x72, 0x34,
	0x10, 0x32, 0xe8, 0x40, 0x3c, 0x74, 0x78, 0xb4, 0xd3, 0x76, 0x37, 0xd0, 0xd9, 0x38, 0x0a, 0x76,
	0x89, 0x49, 0x7a, 0x03, 0x5e, 0x80, 0x97, 0xe8, 0xb5, 0x48, 0xd3, 0x26, 0xab, 0x4c, 0x29, 0x3b,
	0x29, 0x24, 0x79, 0x9e, 0xfe, 0xde, 0xe7, 0x79, 0xe1, 0xd2, 0x94, 0x15, 0x57, 0x73, 0xfb, 0xcd,
	0x65, 0xc9, 0xa4, 0x12, 0x46, 0xe0, 0xd0, 0x9e, 0xe3, 0xbb, 0xad, 0x10, 0xdb, 0x37, 0x3e, 0xb7,
	0x97, 0x9b, 0xfa, 0xd5, 0xca, 0xb4, 0xc9, 0x2b, 0xd9, 0xea, 0xe8, 0x17, 0x82, 0x68, 0x5d, 0x56,
	0x3c, 0x93, 0xf9, 0x0e, 0x9f, 0x42, 0x50, 0x16, 0x04, 0x4d, 0xd1, 0x2c, 0x4c, 0x83, 0xb2, 0xc0,
	0x57, 0x30, 0xaa, 0x35, 0x57, 0xab, 0x82, 0x04, 0xf6, 0xae, 0x3b, 0xe1, 0x47, 0x18, 0x6b, 0x93,
	0x2b, 0xd3, 0x18, 0xc9, 0xff, 0x29, 0x9a, 0x4d, 0x92, 0x98, 0xb5, 0x24, 0xe6, 0x48, 0x6c, 0xed,
	0x48, 0xe9, 0x5e, 0x8c, 0x1f, 0x20, 0xd2, 0x46, 0x48, 0x6b, 0x3c, 0x19, 0x34, 0x7a, 0x6d, 0x43,
	0x7c, 0x51, 0x3c, 0x37, 0xbc, 0x58, 0x1a, 0x12, 0x0e, 0x13, 0xbd, 0x98, 0x72, 0xb8, 0xc8, 0x1c,
	0x5e, 0xa5, 0xfc, 0xbd, 0xe6, 0xda, 0xf4, 0x82, 0xa1, 0xbf, 0x83, 0x05, 0x47, 0x04, 0xa3, 0x4b,
	0xc0, 0x7d, 0x8c, 0x96, 0x62, 0xa7, 0x39, 0xbe, 0x87, 0xc8, 0x74, 0xe5, 0x5a, 0xd2, 0x24, 0x39,
	0x63, 0x76, 0x31, 0xcc, 0x75, 0x9e, 0x7a, 0x01, 0xfd, 0x40, 0x70, 0x9e, 0x75, 0x81, 0x07, 0x27,
	0xed, 0x17, 0x19, 0x1c, 0x51, 0xe4, 0x2d, 0x80, 0x03, 0xae, 0x0a, 0xbb, 0xbb, 0x30, 0xed, 0xdd,
	0xd0, 0x45, 0x53, 0x97, 0x9f, 0xa1, 0x8b, 0x31, 0x60, 0x4a, 0x3e, 0x11, 0x84, 0xd6, 0x81, 0x9f,
	0x01, 0xf6, 0x35, 0x60, 0xd2, 0x85, 0x3d, 0x58, 0x40, 0x7c, 0xf3, 0xcb, 0x4b, 0x0b, 0xa3, 0xff,
	0xf0, 0x13, 0x8c, 0xfd, 0x0c, 0xf8, 0xda, 0x2b, 0x7f, 0x36, 0x13, 0x93, 0xc3, 0x07, 0xf7, 0x87,
	0xcd, 0xc8, 0x76, 0xb0, 0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x08, 0xa1, 0x6d, 0x1d, 0x1c, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TimerClient is the client API for Timer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TimerClient interface {
	StartTimer(ctx context.Context, in *StartTimerRequest, opts ...grpc.CallOption) (*StartTimerResponse, error)
	StopTimer(ctx context.Context, in *StopTimerRequest, opts ...grpc.CallOption) (*StopTimerResponse, error)
}

type timerClient struct {
	cc *grpc.ClientConn
}

func NewTimerClient(cc *grpc.ClientConn) TimerClient {
	return &timerClient{cc}
}

func (c *timerClient) StartTimer(ctx context.Context, in *StartTimerRequest, opts ...grpc.CallOption) (*StartTimerResponse, error) {
	out := new(StartTimerResponse)
	err := c.cc.Invoke(ctx, "/timer.Timer/StartTimer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timerClient) StopTimer(ctx context.Context, in *StopTimerRequest, opts ...grpc.CallOption) (*StopTimerResponse, error) {
	out := new(StopTimerResponse)
	err := c.cc.Invoke(ctx, "/timer.Timer/StopTimer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TimerServer is the server API for Timer service.
type TimerServer interface {
	StartTimer(context.Context, *StartTimerRequest) (*StartTimerResponse, error)
	StopTimer(context.Context, *StopTimerRequest) (*StopTimerResponse, error)
}

// UnimplementedTimerServer can be embedded to have forward compatible implementations.
type UnimplementedTimerServer struct {
}

func (*UnimplementedTimerServer) StartTimer(ctx context.Context, req *StartTimerRequest) (*StartTimerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartTimer not implemented")
}
func (*UnimplementedTimerServer) StopTimer(ctx context.Context, req *StopTimerRequest) (*StopTimerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopTimer not implemented")
}

func RegisterTimerServer(s *grpc.Server, srv TimerServer) {
	s.RegisterService(&_Timer_serviceDesc, srv)
}

func _Timer_StartTimer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartTimerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimerServer).StartTimer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/timer.Timer/StartTimer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimerServer).StartTimer(ctx, req.(*StartTimerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Timer_StopTimer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopTimerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimerServer).StopTimer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/timer.Timer/StopTimer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimerServer).StopTimer(ctx, req.(*StopTimerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Timer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "timer.Timer",
	HandlerType: (*TimerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartTimer",
			Handler:    _Timer_StartTimer_Handler,
		},
		{
			MethodName: "StopTimer",
			Handler:    _Timer_StopTimer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "timer/timerapi.proto",
}
